// Generated by CoffeeScript 1.6.3
var VerifyView;

VerifyView = Backbone.Marionette.ItemView.extend({
  template: JST["_attachments/templates/VerifyView.handlebars"](),
  className: "itemView",
  events: {
    "click #verify": "scan",
    "click #scan": "scanNewIndividual",
    "click #verifyYes": "displayNewUserRegistration",
    "click #verifyNo": "displayNewUserRegistration"
  },
  nextUrl: null,
  hasCordova: true,
  initialize: function() {
    if (typeof cordova === "undefined") {
      console.log("cordova is not defined.");
      return this.hasCordova = false;
    }
  },
  displayNewUserRegistration: function() {
    Coconut.router.navigate("userRegistration", true);
  },
  diplayNewReportMenu: function() {},
  scanNewIndividual: function(e) {
    this.scan(e, "userRegistration");
  },
  scan: function(event, sliderId) {
    var display, revealSlider,
      _this = this;
    this.eventUrl = this.nextUrl;
    display = function(message) {
      var label, lineBreak;
      console.log("display message: " + message);
      display = document.getElementById("message");
      lineBreak = document.createElement("br");
      label = document.createTextNode(message);
      display.appendChild(lineBreak);
      display.appendChild(label);
    };
    revealSlider = function(event, sliderId) {
      var button, maxRepeat, progress, repeat, startLadda, thisSliderId;
      startLadda = function(e) {
        var i, interval, l;
        l = Ladda.create(e.currentTarget);
        l.start();
        if (_this.hasCordova) {
          cordova.plugins.SecugenPlugin.register(function(results) {
            var info1, info2, resultsArray;
            console.log("SecugenPlugin.register: " + results);
            l.stop();
            resultsArray = results.split(" ");
            if (resultsArray.length > 2) {
              info1 = resultsArray[0];
              info2 = resultsArray[1];
              if (info2 === "NoMatch") {
                $("#message").html("No match - you must register.");
                if (_this.nextUrl != null) {
                  return Coconut.router.navigate(_this.nextUrl, true);
                } else {
                  return Coconut.router.navigate("registration", true);
                }
              } else if (info2 === "Match") {
                info2 = resultsArray[1];
                l.stop();
                return $("#message").html(results);
              } else {
                l.stop();
                return $("#message").html(results);
              }
            }
          });
        } else {
          i = 1;
          interval = setInterval(function() {
            if (i === 50) {
              console.log("Go to next page.");
              $("#message").html("Scanning complete!");
              l.stop();
              if (_this.nextUrl != null) {
                Coconut.router.navigate(_this.nextUrl, true);
              } else {
                Coconut.router.navigate("registration", true);
              }
              clearInterval(interval);
            }
            return i++;
          }, 50);
        }
        return false;
      };
      console.log("revealSlider");
      progress = document.querySelector("paper-progress");
      button = document.querySelector("paper-button");
      if (typeof sliderId !== "undefined") {
        thisSliderId = sliderId;
      }
      startLadda(event);
      repeat = void 0;
      return maxRepeat = 5;
    };
    return revealSlider(event, sliderId);
  },
  display: function(message) {
    var display, label, lineBreak;
    console.log("display message.");
    display = document.getElementById("message");
    lineBreak = document.createElement("br");
    label = document.createTextNode(message);
    display.appendChild(lineBreak);
    display.appendChild(label);
  }
});
